plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.jetpacktrials"
        minSdk 26
        targetSdk 32
        versionCode generateVersionCode()
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "API_KEY", "\""+getApiKey()+"\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    android {
        dataBinding {
            enabled = true
        }
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    task ratchet(dependsOn: ['testReleaseUnitTest', 'commit']) {}

    task commit(dependsOn: 'testReleaseUnitTest') {
        doLast {
            exec {
                workingDir './'
                commandLine 'git', 'commit', '-am', 'wip'
                ignoreExitValue = true
            }
        }
    }
    namespace 'com.example.jetpacktrials'
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "skipped", "passed", "failed"
        showStandardStreams true
    }
}

static def generateVersionCode() {
    return BigDecimal.valueOf(System.currentTimeMillis() / 1000).intValue()
}

static def getApiKey(){
    Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['API_KEY']
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // JUnit 5
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"

    // MockK
    testImplementation "io.mockk:mockk:1.12.3"
    testImplementation "io.mockk:mockk-agent-jvm:1.12.3"
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.6.21'

    // Testing coroutines
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1'

    // Coil
    implementation 'io.coil-kt:coil-compose:2.0.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:2.41"
    kapt "com.google.dagger:hilt-compiler:2.41"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Retrofit + GSON
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // Accompanist
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.24.9-beta"
}